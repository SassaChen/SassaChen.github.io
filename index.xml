<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rafał Sroka on Rafał Sroka</title>
    <link>https://r3econ.github.io/</link>
    <description>Recent content in Rafał Sroka on Rafał Sroka</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Rafał Sroka</copyright>
    <lastBuildDate>Fri, 20 Oct 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Example Talk</title>
      <link>https://r3econ.github.io/talk/example-talk/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0100</pubDate>
      
      <guid>https://r3econ.github.io/talk/example-talk/</guid>
      <description>&lt;p&gt;Embed your slides or video here using &lt;a href=&#34;https://sourcethemes.com/academic/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;. Further details can easily be added using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Amboss</title>
      <link>https://r3econ.github.io/project/amboss/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://r3econ.github.io/project/amboss/</guid>
      <description>

&lt;p&gt;Two iOS apps supporting Amboss medical knowledge platform, a smart learning system for medical students and physicians. The apps are available in Germany and United States.&lt;/p&gt;

&lt;h2 id=&#34;qbank&#34;&gt;Qbank&lt;/h2&gt;

&lt;table style=&#34;width:100%&#34;&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;a href=&#34;https://imgur.com/WHW1U7D&#34;&gt;&lt;img src=&#34;https://i.imgur.com/WHW1U7Dm.png&#34; title=&#34;source: imgur.com&#34; style=&#34;margin: 20px&#34;/&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&#34;https://imgur.com/0AVFS0b&#34;&gt;&lt;img src=&#34;https://i.imgur.com/0AVFS0bm.png&#34; title=&#34;source: imgur.com&#34; style=&#34;margin: 20px&#34;/&gt;&lt;/a&gt;&lt;/td&gt; 
        &lt;td&gt;&lt;a href=&#34;https://imgur.com/UqbsFGs&#34;&gt;&lt;img src=&#34;https://i.imgur.com/UqbsFGsm.png&#34; title=&#34;source: imgur.com&#34; style=&#34;margin: 20px&#34;/&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Qbank (Kreuzen) is a question bank, which is composed of exam-relevant multiple-choice questions.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://itunes.apple.com/de/app/amboss-kreuzen-f%C3%BCr-mediziner/id1076182652?mt=8&#34; style=&#34;display:inline-block;overflow:hidden;background:url(https://linkmaker.itunes.apple.com/assets/shared/badges/en-us/appstore-lrg.svg) no-repeat;width:135px;height:40px;background-size:contain;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;knowledge&#34;&gt;Knowledge&lt;/h2&gt;

&lt;p&gt;&lt;table style=&#34;width:100%&#34;&gt;
    &lt;tr&gt;
&lt;a href=&#34;https://imgur.com/Yj6MVOm&#34;&gt;&lt;img src=&#34;https://i.imgur.com/Yj6MVOmm.jpg&#34; title=&#34;source: imgur.com&#34; align=&#34;left&#34; style=&#34;margin: 20px&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://imgur.com/IJ6jqPN&#34;&gt;&lt;img src=&#34;https://i.imgur.com/IJ6jqPNm.jpg&#34; title=&#34;source: imgur.com&#34; align=&#34;left&#34; style=&#34;margin: 20px&#34;/&gt;&lt;/a&gt;
&lt;a href=&#34;https://imgur.com/9A6KKAe&#34;&gt;&lt;img src=&#34;https://i.imgur.com/9A6KKAem.jpg&#34; title=&#34;source: imgur.com&#34; align=&#34;left&#34; style=&#34;margin: 20px&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Knowledge (Wissen) is a learning card library which contains articles on all the important medical subjects. Both apps offer full offline functionality and base on CoreData.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://itunes.apple.com/de/app/amboss-wissen-f%C3%BCr-mediziner/id957328882?mt=8&#34; style=&#34;display:inline-block;overflow:hidden;background:url(https://linkmaker.itunes.apple.com/assets/shared/badges/en-us/appstore-lrg.svg) no-repeat;width:135px;height:40px;background-size:contain;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All four apps (US + DE) are available &lt;a href=&#34;https://itunes.apple.com/de/developer/miamed-gmbh/id918156225&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DasKochrezept</title>
      <link>https://r3econ.github.io/project/daskochrezept/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://r3econ.github.io/project/daskochrezept/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://imgur.com/p0Z0CZ9&#34;&gt;&lt;img src=&#34;https://i.imgur.com/p0Z0CZ9m.jpg&#34; title=&#34;source: imgur.com&#34; align=&#34;right&#34; style=&#34;margin: 20px&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An iOS app for cooking enthusiasts. Built for &lt;a href=&#34;https://www.daskochrezept.de/&#34; target=&#34;_blank&#34;&gt;DasKochrezept.de&lt;/a&gt;, one of the leading food related websites and print magazines in Germany. The app got featured by Apple and reached place 6. in Food &amp;amp; Drink category in it’s first week, without marketing.&lt;/p&gt;

&lt;p&gt;The app helps users find best food recipes. User can bookmark recipes creating his own cook book.The app also contains a shopping list functionality.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://itunes.apple.com/de/app/daskochrezept-de-rezeptideen-zum-kochen-und-backen/id972013927?mt=8&#34; style=&#34;display:inline-block;overflow:hidden;background:url(https://linkmaker.itunes.apple.com/assets/shared/badges/en-us/appstore-lrg.svg) no-repeat;width:135px;height:40px;background-size:contain;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Contact me to request my full portfolio.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TrendU</title>
      <link>https://r3econ.github.io/project/trendu/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://r3econ.github.io/project/trendu/</guid>
      <description>&lt;table style=&#34;width:100%&#34;&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;a href=&#34;https://imgur.com/ZHNUqUc&#34;&gt;&lt;img src=&#34;https://i.imgur.com/ZHNUqUcm.png&#34; title=&#34;source: imgur.com&#34; style=&#34;margin: 20px&#34; align=&#34;right&#34;/&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&#34;https://imgur.com/hB8MUY2&#34;&gt;&lt;img src=&#34;https://i.imgur.com/hB8MUY2m.png&#34; title=&#34;source: imgur.com&#34; style=&#34;margin: 20px&#34; align=&#34;left&#34;/&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Mobile shopping iOS app exclusively for women. The app helped user find, discover and purchase pre-loved clothing. It was a mixture of social features of Facebook, auctioning services of eBay and ease of use of Tinder. I was responsible for the development and release process of the app.&lt;/p&gt;

&lt;p&gt;Contact me to request my full portfolio.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>igobubble</title>
      <link>https://r3econ.github.io/project/igobubble/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://r3econ.github.io/project/igobubble/</guid>
      <description>&lt;table style=&#34;width:100%&#34;&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;a href=&#34;https://imgur.com/uLCuLAM&#34;&gt;&lt;img src=&#34;https://i.imgur.com/uLCuLAMm.jpg&#34; title=&#34;source: imgur.com&#34; align=&#34;left&#34; style=&#34;margin: 20px&#34;/&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&#34;https://imgur.com/40B4w78&#34;&gt;&lt;img src=&#34;https://i.imgur.com/40B4w78m.jpg&#34; title=&#34;source: imgur.com&#34; align=&#34;left&#34; style=&#34;margin: 20px&#34;/&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;&lt;a href=&#34;https://imgur.com/LgeZgZC&#34;&gt;&lt;img src=&#34;https://i.imgur.com/LgeZgZCm.jpg&#34; title=&#34;source: imgur.com&#34; align=&#34;left&#34; style=&#34;margin: 20px&#34;/&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Social discovery app that helped users make friends with people nearby and share photos, videos, and messages in virtual living bubbles at real world places.&lt;/p&gt;

&lt;p&gt;Igobubble was a mobile app that integrated location-aware social networking with digital content.&lt;/p&gt;

&lt;p&gt;Users use their smartphone&amp;rsquo;s to leave digital content like photos, videos, messages and more inside bubbles at any location. After users leave, their bubbles stay behind for others to discover.&lt;/p&gt;

&lt;p&gt;I worked on the iOS app and &lt;code&gt;.NET&lt;/code&gt; &lt;code&gt;C#&lt;/code&gt; backend API.&lt;/p&gt;

&lt;p&gt;Contact me to request my full portfolio.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Low Memory crash events in iOS</title>
      <link>https://r3econ.github.io/post/2016-01-10-low-memory-ios/</link>
      <pubDate>Sun, 10 Jan 2016 00:00:00 +0100</pubDate>
      
      <guid>https://r3econ.github.io/post/2016-01-10-low-memory-ios/</guid>
      <description>

&lt;p&gt;There are hundreds of them. Crash reporting tools like &lt;code&gt;HockeyApp&lt;/code&gt;, &lt;code&gt;QuincyKit&lt;/code&gt;, &lt;code&gt;Crashlytics&lt;/code&gt; and many, many others. None are able to capture and track low memory crash events on iOS. Have you ever wondered why? This article will explain you this.&lt;/p&gt;

&lt;h2 id=&#34;how-crash-reporting-tools-work&#34;&gt;How crash reporting tools work&lt;/h2&gt;

&lt;p&gt;Crash reporting tools look into one special folder in application’s directory.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;/var/mobile/Application/Library/Caches/crashes&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This folder contains the crash reports generated by iOS when app crashes. Usually, the crash reporting tools monitor this folder. If a change is detected, the newly generated crash report is analyzed. In most of the cases, it’s sent to a back-end and symbolicated there. Later, the developer can get information about code responsible for making the app crash by looking at the crash log in the dashboard.&lt;/p&gt;

&lt;p&gt;Let’s consider a slightly different scenario. Let’s say the app crashed. The reason was low memory warning (low memory crash). In this case, no file gets created in that directory. Later, we can view the low memory crash reports in &lt;code&gt;Organizer&lt;/code&gt; (their type is &lt;code&gt;Unknown&lt;/code&gt;). However, they are not created in the above folder.&lt;/p&gt;

&lt;h2 id=&#34;low-memory-crash-event&#34;&gt;Low memory crash event&lt;/h2&gt;

&lt;p&gt;To understand this we need to define what a &lt;code&gt;Low Memory&lt;/code&gt; crash event is.&lt;/p&gt;

&lt;p&gt;Low memory crash events are actually kills by the iOS watchdog process. Whenever you kill a process, there is no crash happening. The crash reports for low memory crash incidents that we can see in Organizer are in fact not crash logs. They are arbitrary reports written by the watchdog process that did the kill. So the only system that can provide information about these, is iOS itself. No external tool can help in this case.&lt;/p&gt;

&lt;h2 id=&#34;what-can-we-do&#34;&gt;What can we do&lt;/h2&gt;

&lt;p&gt;Most of the crash reporting tools makers claim to be actively working on a solution that will allow tracking of the low memory incidents. In my opinion, these are just empty words. There is not much they can do in that matter. It is Apple that has to change the way the low memory crash events are handled in iOS. Otherwise, we cannot really investigate them.&lt;/p&gt;

&lt;p&gt;Based on &lt;a href=&#34;https://developer.apple.com/library/content/technotes/tn2151/_index.html#//apple_ref/doc/uid/DTS40008184-CH1-UNDERSTANDING_LOW_MEMORY_REPORTS&#34; target=&#34;_blank&#34;&gt;Understanding and Analyzing iOS Application Crash Reports&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Coordinate system in Sprite Kit</title>
      <link>https://r3econ.github.io/post/2015-11-10-spritekit-coordinate-system/</link>
      <pubDate>Tue, 10 Nov 2015 00:00:00 +0100</pubDate>
      
      <guid>https://r3econ.github.io/post/2015-11-10-spritekit-coordinate-system/</guid>
      <description>

&lt;h2 id=&#34;spritekit-coordinates&#34;&gt;SpriteKit coordinates&lt;/h2&gt;

&lt;p&gt;The coordinate system in Sprite Kit might give you a headache if you didn’t dig deep enough while reading the documentation.&lt;/p&gt;

&lt;p&gt;In this post I will explain differences between &lt;code&gt;SKScene&lt;/code&gt; and &lt;code&gt;SKNode&lt;/code&gt; when it comes to coordinate system in Sprite Kit.&lt;/p&gt;

&lt;h2 id=&#34;skscene&#34;&gt;SKScene&lt;/h2&gt;

&lt;p&gt;Sprite Kit uses a coordinate system orientation that starts from the bottom left corner of the screen &lt;code&gt;(0, 0)&lt;/code&gt;, and the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values increase as you move up and to the right.&lt;/p&gt;

&lt;p&gt;For &lt;code&gt;SKScene&lt;/code&gt;, the default value of the origin – &lt;code&gt;anchorPoint&lt;/code&gt; is &lt;code&gt;(0, 0)&lt;/code&gt;, which corresponds to the lower-left corner of the view’s frame rectangle. To change it to center you can specify &lt;code&gt;(0.5, 0.5)&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;sknode&#34;&gt;SKNode&lt;/h2&gt;

&lt;p&gt;The coordinate system origin in the &lt;code&gt;SKNode&lt;/code&gt; is defined by its anchorPoint which by default is &lt;code&gt;(0.5, 0.5)&lt;/code&gt; which is center of the node.&lt;/p&gt;

&lt;p&gt;But why is it center? The texture of the sprite is drawn relative to the node position based on the &lt;code&gt;anchorPoint&lt;/code&gt; factor. It’s default value of &lt;code&gt;(0.5, 0.5)&lt;/code&gt; places the texture centered on the node’s position. You might want to adjust the anchor point, but it will change the position of the texture which you generally don’t want.&lt;/p&gt;

&lt;p&gt;When creating a &lt;code&gt;CGPath&lt;/code&gt; for a physics body for your &lt;code&gt;SKNode&lt;/code&gt; (for example using &lt;code&gt;bodyWithEdgeLoopFromPath:&lt;/code&gt; method) you should use node’s coordinate system with the origin in the middle unless you changed the anchor point.&lt;/p&gt;

&lt;h2 id=&#34;tricks&#34;&gt;Tricks&lt;/h2&gt;

&lt;p&gt;You can set &lt;code&gt;SKScene&lt;/code&gt;‘s &lt;code&gt;yScale&lt;/code&gt; property to &lt;code&gt;-1&lt;/code&gt;. If you do so, everything will render upside down. Moreover, you can also set the yScale property for each &lt;code&gt;SKNode&lt;/code&gt; to &lt;code&gt;-1&lt;/code&gt;, which will cause them to render right side up.&lt;/p&gt;

&lt;h2 id=&#34;things-to-remember&#34;&gt;Things to remember&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SKNodes&lt;/code&gt; have a default coordinate system where &lt;code&gt;(0, 0)&lt;/code&gt; is the center.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SKScene&lt;/code&gt; has a default coordinate system where &lt;code&gt;(0, 0)&lt;/code&gt; is the lower left corner.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>A Person Re-Identification System For Mobile Devices</title>
      <link>https://r3econ.github.io/publication/person-re-identification/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://r3econ.github.io/publication/person-re-identification/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advertising Identifier in iOS</title>
      <link>https://r3econ.github.io/post/2015-08-10-idfa/</link>
      <pubDate>Mon, 10 Aug 2015 00:00:00 +0200</pubDate>
      
      <guid>https://r3econ.github.io/post/2015-08-10-idfa/</guid>
      <description>

&lt;h2 id=&#34;what-is-idfa&#34;&gt;What is IDFA?&lt;/h2&gt;

&lt;p&gt;Let’s decipher the acronym first. &lt;code&gt;IDFA&lt;/code&gt; stands for Identifier for Advertising. Apple documentation says that &lt;code&gt;IDFA&lt;/code&gt; is an identifier that can be used only for serving advertisements. An alphanumeric string unique to each device, used only for serving advertisements.&lt;/p&gt;

&lt;p&gt;It is similar to &lt;code&gt;UIDevice&lt;/code&gt;’s property &lt;code&gt;identifierForVendor&lt;/code&gt; but (and that’s a very big but) its value is the same for all vendors. In short words, it uniquely identifies the iDevice. However it is not the same as an old &lt;code&gt;UDID&lt;/code&gt; which usage has been prohibited. &lt;code&gt;IDFA&lt;/code&gt; can change in special cases. For example when user erases the device.&lt;/p&gt;

&lt;h2 id=&#34;when-to-use-idfa&#34;&gt;When to use IDFA?&lt;/h2&gt;

&lt;p&gt;You should only use &lt;code&gt;IDFA&lt;/code&gt; for advertising related purposes. It should not be used solely for uniquely identifying the device. Not obeying this rule might result in rejection of your app from the App Store. Basically, if your app shows advertisements, uses iAd, or responds to advertisements in any way, for example by submitting an event to your server to indicate that it was launched because user tapped on an iAd, you are good to go.&lt;/p&gt;

&lt;p&gt;You can use &lt;code&gt;IDFA&lt;/code&gt; for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;frequency capping,&lt;/li&gt;
&lt;li&gt;conversion events,&lt;/li&gt;
&lt;li&gt;estimating the number of unique users,&lt;/li&gt;
&lt;li&gt;security and fraud detection,&lt;/li&gt;
&lt;li&gt;debugging&lt;/li&gt;
&lt;li&gt;iTunes Connect&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Recent change in iTunes Connect added a new question the developer has to answer before marking the version as ready for upload.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Does this app use the Advertising Identifier?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Answering &lt;code&gt;YES&lt;/code&gt; results in showing three checkboxes where you can indicate why exactly your app needs to access the Advertising Identifier.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Serve advertisements within the app.&lt;/li&gt;
&lt;li&gt;Attribute this app installation to a previously served advertisement.&lt;/li&gt;
&lt;li&gt;Attribute an action taken within this app to a previously served advertisement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First option is self explanatory. Check this if you are showing advertisements in your app. Next two options cover various cases when your app is opened because of user interaction with an ad. A good example is sending the identifier to your advertising system to know about conversion.&lt;/p&gt;

&lt;h2 id=&#34;how-to-use-idfa&#34;&gt;How to use IDFA?&lt;/h2&gt;

&lt;p&gt;Getting &lt;code&gt;IDFA&lt;/code&gt; is simple as I described in this SO &lt;a href=&#34;https://stackoverflow.com/questions/12944504/how-to-retrieve-iphone-idfa-from-api/23216706#23216706&#34; target=&#34;_blank&#34;&gt;answer&lt;/a&gt;. &lt;code&gt;ASIdentifierManager&lt;/code&gt; class provides methods for getting it and checking whether user has decided to opt out from ad tracking. In this case, returned &lt;code&gt;IDFA&lt;/code&gt; string is nil. The following code snippet shows how to obtain a string value of &lt;code&gt;IDFA&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Objective-C:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;@import AdSupport;

- (NSString *)identifierForAdvertising {
    // Check whether advertising tracking is enabled
    if([[ASIdentifierManager sharedManager] isAdvertisingTrackingEnabled]) {
        NSUUID *identifier = [[ASIdentifierManager sharedManager] advertisingIdentifier];
        return [identifier UUIDString];
    }

    // Get and return IDFA
    return nil;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Swift:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import AdSupport

func identifierForAdvertising() -&amp;gt; String? {
    // Check whether advertising tracking is enabled
    guard ASIdentifierManager.shared().isAdvertisingTrackingEnabled else {
        return nil
    }

    // Get and return IDFA
    return ASIdentifierManager.shared().advertisingIdentifier.uuidString
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Apple takes security very seriously. New policies for collecting used specific information regarding advertising blend very well in it. User have now a choice to opt out from behavioral advertising. It is a move in the right direction.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CMMotionManager noise reduction in iOS</title>
      <link>https://r3econ.github.io/post/2015-07-14-motion-manager-noise/</link>
      <pubDate>Tue, 14 Jul 2015 00:00:00 +0200</pubDate>
      
      <guid>https://r3econ.github.io/post/2015-07-14-motion-manager-noise/</guid>
      <description>&lt;p&gt;&lt;code&gt;CMMotionManager&lt;/code&gt; lets us access data from various motion sensors like accelerometer or gyroscope on iOS device.&lt;/p&gt;

&lt;p&gt;However, in many situations, the data we get from &lt;code&gt;CMMotionManager&lt;/code&gt; is not smooth. Basically it contains noise. This article presents a way to smooth the accelerometer readings using a Low Pass Filter.&lt;/p&gt;

&lt;p&gt;An accelerometer reading in iOS is modelled by &lt;code&gt;CMAcceleration&lt;/code&gt; which is nothing more than a simple struct:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;typedef struct {
      double x;
      double y;
      double z;
} CMAcceleration;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt; are values of acceleration in &lt;code&gt;G&lt;/code&gt;‘s (gravitational force unit) along &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt; axis.&lt;/p&gt;

&lt;p&gt;What we need here is a kind of a Low-pass filter that will allow us to ignore small movements. Low-pass filter provides a smoother form of a signal, removing the short-term fluctuations, and leaving the longer-term trend. Effectively, it will smooth out the data we get from &lt;code&gt;CMMotionManager&lt;/code&gt; by taking out the jittery. This can be done by shifting the value of each accelerometer reading into closer harmony with the values of its neighbors.&lt;/p&gt;

&lt;p&gt;If you ever had contact with signal processing or electronic circuit theories, you probably remember what a low pass filter was made of. Resistance and capacitance connected as depicted on the right.&lt;/p&gt;

&lt;p&gt;The code snippet below does exactly what we need. The named the variable in a way that should seem familiar for those that tinkered with creating electronic circuits. You can also get it from my gist repo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (CMAcceleration)smoothOutAcceleration:(CMAcceleration)acceleration {
    static CGFloat x0 = 0;
    static CGFloat y0 = 0;
    static CGFloat z0 = 0;

    const NSTimeInterval dt = (1.0 / 20);
    const double RC = 0.3;
    const double alpha = dt / (RC + dt);

    CMAcceleration smoothedAcceleration;
    smoothedAcceleration.x = (alpha * acceleration.x) + (1.0 - alpha) * x0;
    smoothedAcceleration.y = (alpha * acceleration.y) + (1.0 - alpha) * y0;
    smoothedAcceleration.z = (alpha * acceleration.z) + (1.0 - alpha) * z0;

    x0 = smoothed.x;
    y0 = smoothed.y;
    z0 = smoothed.z;

    return smoothedAcceleration;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The alpha value determines how much weight to give the previous data vs the raw data. The dt is how much time elapsed between samples. &lt;code&gt;RC&lt;/code&gt; value controls the aggressiveness of the filter. Bigger values mean smoother output.&lt;/p&gt;

&lt;p&gt;Based on &lt;a href=&#34;https://developer.apple.com/documentation/coremotion/cmmotionmanager&#34; target=&#34;_blank&#34;&gt;CMMotionManager Class Reference&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Playing sounds in Sprite Kit using SKAction</title>
      <link>https://r3econ.github.io/post/2015-04-10-sounds-in-spritekit/</link>
      <pubDate>Fri, 10 Apr 2015 00:00:00 +0200</pubDate>
      
      <guid>https://r3econ.github.io/post/2015-04-10-sounds-in-spritekit/</guid>
      <description>

&lt;p&gt;This article discusses adding sound effects to a Sprite Kit project using &lt;code&gt;SKAction&lt;/code&gt; and provides you with a couple of tips and tricks and useful code snippets. It also explains performance issues that may appear when dealing with sounds not in the best, most efficient way and gives insights into how to avoid these problems.&lt;/p&gt;

&lt;h2 id=&#34;using-skaction&#34;&gt;Using SKAction&lt;/h2&gt;

&lt;p&gt;There are many ways you can play sounds in Sprite Kit game. The easiest way of playing a sound file is using a &lt;code&gt;SKAction&lt;/code&gt;. It has a built-in method for handling audio playback.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;+ (SKAction *)playSoundFileNamed:(NSString*)soundFile
               waitForCompletion:(BOOL)wait;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The method simply creates an action that plays a sound. Sound file name must be the name or path of a file of a platform supported audio file format. Apple recommends using a &lt;code&gt;LinearPCM&lt;/code&gt; format audio file with 8 or 16 bits per channel for best performance.
After creating the action one has to run it to hear the effect.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[[self scene] runAction:[SKAction playSoundFileNamed:@&amp;quot;sound.caf&amp;quot;
      waitForCompletion:NO]];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;iOS and macOS have a native audio file format, the Core Audio Format (or &lt;code&gt;CAF&lt;/code&gt;) file format. &lt;code&gt;CAF&lt;/code&gt; should be your first choice format. However, you can also use other formats like &lt;code&gt;AIFF&lt;/code&gt;, &lt;code&gt;WAV&lt;/code&gt; or even &lt;code&gt;MP3&lt;/code&gt;. Full list of supported audio file formats on macOS and iOS can be found &lt;a href=&#34;https://developer.apple.com/library/content/documentation/MusicAudio/Conceptual/CoreAudioOverview/CoreAudioEssentials/CoreAudioEssentials.html#//apple_ref/doc/uid/TP40003577-CH10-SW47&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; (iOS) and &lt;a href=&#34;https://developer.apple.com/library/content/documentation/MusicAudio/Conceptual/CoreAudioOverview/SupportedAudioFormatsMacOSX/SupportedAudioFormatsMacOSX.html#//apple_ref/doc/uid/TP40003577-CH7-SW1&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; (OS X). Keep in mind that for very short sound files, say shorter than 4 seconds, &lt;code&gt;MP3&lt;/code&gt; isn’t ideal since &lt;code&gt;MP3&lt;/code&gt; file is buffered into a &lt;code&gt;250KB&lt;/code&gt; buffer. Try &lt;code&gt;CAF&lt;/code&gt; or &lt;code&gt;WAV&lt;/code&gt; instead.&lt;/p&gt;

&lt;p&gt;When using &lt;code&gt;SKAction&lt;/code&gt;‘s &lt;code&gt;playSoundFileNamed:&lt;/code&gt; method one has to remember to cache the action if it’s executed many times. Not doing this might result in a nasty &lt;code&gt;‘Failed to Load Resource’&lt;/code&gt; crash when the sound file is being loaded simultaneously by many &lt;code&gt;SKAction&lt;/code&gt; instances.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Terminating app due to uncaught exception ‘Failed to Load Resource’, reason: ‘Resource sound.wav can not be loaded’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Moreover, for performance reasons, unnecessary disk operations should be avoided. So we should create a &lt;code&gt;SKAction&lt;/code&gt; that represents playing the sound, and reuse that object so the audio file is only loaded once. Thus, the best way of doing this is to store the repeated action in a static variable. The following sample code shows a good example of how to do it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;static SKAction *sharedMissileLaunchSoundAction = nil;

- (SKAction *)missileSoundAction {
    return sharedMissileLaunchSoundAction;
}

+ (void)loadSharedAssets {
    static dispatch_once_t onceToken;

    dispatch_once(&amp;amp;amp;onceToken, ^{
        sharedMissileLaunchSoundAction = [SKAction playSoundFileNamed:@&amp;quot;missile.caf&amp;quot;
                                                    waitForCompletion:NO];
    });
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;drawbacks-of-skaction-approach&#34;&gt;Drawbacks of SKAction approach&lt;/h2&gt;

&lt;p&gt;Playing sounds using &lt;code&gt;SKAction&lt;/code&gt; is very simple and straightforward. However there is no way you can configure the way the sound is played. The biggest drawback is that there is no way of controlling the volume of the sound played using the &lt;code&gt;playSoundFileNamed:&lt;/code&gt;&lt;code&gt;method. If you need more flexibility in playing the sounds you might consider using [&lt;/code&gt;AVAudioPlayer`](&lt;a href=&#34;https://developer.apple.com/documentation/avfoundation/avaudioplayer&#34; target=&#34;_blank&#34;&gt;https://developer.apple.com/documentation/avfoundation/avaudioplayer&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;However, for simple games that do not require sophisticated audio engines, using &lt;code&gt;SKAction&lt;/code&gt;‘s to play sound is the best and the fastest way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dynamic linking in Java</title>
      <link>https://r3econ.github.io/post/2014-06-24-dynamic-linking-in-java/</link>
      <pubDate>Tue, 24 Jun 2014 00:00:00 +0200</pubDate>
      
      <guid>https://r3econ.github.io/post/2014-06-24-dynamic-linking-in-java/</guid>
      <description>

&lt;p&gt;Java applications are usually compiled to &lt;a href=&#34;https://en.wikipedia.org/wiki/Java_bytecode&#34; target=&#34;_blank&#34;&gt;bytecode&lt;/a&gt; that can be executed on any Java Virtual Machine (JVM) regardless of computer architecture. The bytecode is a representation which is intermediate, a format is then, linked to platform-specific machine code.&lt;/p&gt;

&lt;p&gt;To understand the dynamic linking we must first divide Java program execution into steps. Java language specification defines 5 of them.&lt;/p&gt;

&lt;h2 id=&#34;evaluation&#34;&gt;Evaluation&lt;/h2&gt;

&lt;p&gt;This is the first step which covers all the tasks before the linking process begins. These can be for example assignments or conditionals.&lt;/p&gt;

&lt;h2 id=&#34;loading&#34;&gt;Loading&lt;/h2&gt;

&lt;p&gt;In this process, all the binary representations for class or interface names are loaded. These are loaded by class loaders when they are required for execution or for establishing a relationship as a subtype. Each class is loaded once. All the parent classes as well as interfaces of a given class are loaded. In case of an interface, all the superinterfaces are loaded. Loading process may fail when a class cannot be found, is badly formed or has a circularity.&lt;/p&gt;

&lt;p&gt;Possible errors: &lt;code&gt;NoClassDefFoundError&lt;/code&gt;, &lt;code&gt;ClassCircularityError&lt;/code&gt;, &lt;code&gt;ClassFormatError&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;verification&#34;&gt;Verification&lt;/h2&gt;

&lt;p&gt;In this step, each loaded class representation is checked whether it is well formed. If this check fails, a verification exception is thrown. Things checked during the verification process are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;structural correctness of the bytecode,&lt;/li&gt;
&lt;li&gt;destinations of the goto instructions,&lt;/li&gt;
&lt;li&gt;possible stack overflow or underflow issues,&lt;/li&gt;
&lt;li&gt;types,&lt;/li&gt;
&lt;li&gt;hierarchy of inheritance,&lt;/li&gt;
&lt;li&gt;correctness of fields and method receivers and arguments&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;preparation&#34;&gt;Preparation&lt;/h2&gt;

&lt;p&gt;In this process, a method lookup table is created. This means that once the table is created there is no need to check the superclasses for that. All the class variables as well as constants are created and initialized with their default values. This tasks can fail with &lt;code&gt;OutOfMemory&lt;/code&gt; exception.&lt;/p&gt;

&lt;h2 id=&#34;resolution&#34;&gt;Resolution&lt;/h2&gt;

&lt;p&gt;In this step, the binary files are checked in terms of symbolic reference correctness. This means that all the referenced classes, interfaces, fields and methods are checked if they exists in a referenced class or interface. If they are correct, the symbolic link is changed to a direct link. If the resolution process fails, an &lt;code&gt;IncompatibleClassChangeError&lt;/code&gt; (or its subclass) will occur.&lt;/p&gt;

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;All last four processes – loading, verification, preparation and resolution are parts of dynamic linking on Android. During the dynamic linking process the linker loads and links the libraries required by the process that is about to run&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Playing with vibrator in Android</title>
      <link>https://r3econ.github.io/post/2014-05-06-android-vibrator/</link>
      <pubDate>Tue, 06 May 2014 00:00:00 +0200</pubDate>
      
      <guid>https://r3econ.github.io/post/2014-05-06-android-vibrator/</guid>
      <description>

&lt;h2 id=&#34;the-vibrator-class&#34;&gt;The Vibrator Class&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;android.os.Vibrator&lt;/code&gt; class is responsible for operating the vibrator on the device. It provides an interface for interacting with the vibrator hardware. The vibrator is a tiny vibration motor. It’s a small mechanical component that is built into the phone that produces vibrations.&lt;/p&gt;

&lt;p&gt;The class exists since the beginning of Android. It has been introduced with API version 1.&lt;/p&gt;

&lt;h2 id=&#34;how-to-use-it&#34;&gt;How to use it&lt;/h2&gt;

&lt;p&gt;Vibrating the phone can be done in 5 simple steps. Here is what we are going to do.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Get the handle to a system-level service.&lt;/li&gt;
&lt;li&gt;Check if the service is available.&lt;/li&gt;
&lt;li&gt;Create a vibration pattern.&lt;/li&gt;
&lt;li&gt;Vibrate.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;code-snippet&#34;&gt;Code snippet.&lt;/h2&gt;

&lt;p&gt;The following method vibrates the phone (if the vibration is supported). The vibration has a pattern. The way the phone vibrated is described by the values in the &lt;code&gt;vibrationPattern&lt;/code&gt; array.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public void vibrate() {
    // Get the handle to system-level vibrator service
    Vibrator vibrator = (Vibrator)getSystemService(VIBRATOR_SERVICE);
    // Check if the service is available
    if (vibrator != null) {
        // Create a vibration pattern.
        long[] vibrationPattern = {
            0, 200,
            1000, 300,
            100, 100
        };
        // Vibrate
        vibrator.vibrate(vibrationPattern, -1);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;vibrationPattern&lt;/code&gt; array contains durations for which to turn on or off the vibrator in milliseconds. The first value indicates the number of milliseconds to wait before turning the vibrator on. The second value indicates the number of milliseconds for which to keep the vibrator on before turning it off.&lt;/p&gt;

&lt;p&gt;In the last line we also provide the repeat count. In the sample code, &lt;code&gt;-1&lt;/code&gt; means that the vibration will not be repeated.&lt;/p&gt;

&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;

&lt;p&gt;There is also a simpler method for vibrating the phone.&lt;/p&gt;

&lt;p&gt;{% highlight java %}&lt;/p&gt;

&lt;p&gt;public abstract void vibrate (long milliseconds)&lt;/p&gt;

&lt;p&gt;{% endhighlight %}&lt;/p&gt;

&lt;p&gt;The method does not require you to create a vibration pattern. It just vibrates constantly for the specified period of time.&lt;/p&gt;

&lt;p&gt;To use vibrations in the app, you have to remember to request the &lt;code&gt;VIBRATE&lt;/code&gt; permission. To do so, just include the following line in &lt;code&gt;AndroidManifest.xml&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>iOS NSRunLoop in a nutshell</title>
      <link>https://r3econ.github.io/post/2014-04-09-nsrunloop/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0200</pubDate>
      
      <guid>https://r3econ.github.io/post/2014-04-09-nsrunloop/</guid>
      <description>

&lt;h2 id=&#34;what-is-a-nsrunloop&#34;&gt;What is a NSRunLoop?&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A run loop is an event processing loop that you use to schedule work and coordinate the receipt of incoming events. The purpose of a run loop is to keep your thread busy when there is work to do and put your thread to sleep when there is none.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That’s what docs say. Each thread, including the application’s main thread, has an associated &lt;code&gt;NSRunLoop&lt;/code&gt; object. The app frameworks automatically set up and run the run loop on the main thread as part of the application startup process.&lt;/p&gt;

&lt;p&gt;A &lt;code&gt;NSRunLoop&lt;/code&gt; object processes input for sources such as mouse and keyboard events from the window system, &lt;code&gt;NSPort&lt;/code&gt; objects, and &lt;code&gt;NSConnection&lt;/code&gt; objects. A &lt;code&gt;NSRunLoop&lt;/code&gt; object also processes &lt;code&gt;NSTimer&lt;/code&gt; events. Input sources deliver asynchronous events, usually messages from another thread. Timer sources deliver scheduled events, that are either repeated or delivered at a particular time.&lt;/p&gt;

&lt;h2 id=&#34;nsrunloop&#34;&gt;NSRunLoop&lt;/h2&gt;

&lt;p&gt;A NSRunLoop object delivers the events to the thread, events that can be handled by the thread. Thus the code you write will handle these events.&lt;/p&gt;

&lt;p&gt;In a big simplification you can think of a run loop like of a while loop:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;while(1) {
    checkInputSourcesAndInformThreadIfNeeded();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But a &lt;code&gt;NSRunLoop&lt;/code&gt; does not only that. It can also schedule methods for execution and prioritize them (e.g. &lt;code&gt;performSelector:target:argument:order:modes:&lt;/code&gt; method). Moreover, it can generate notifications about its behavior. Other objects can register as observers to get notified about run loop events.&lt;/p&gt;

&lt;p&gt;To find more about run loops, check out &lt;a href=&#34;https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Multithreading/RunLoopManagement/RunLoopManagement.html#//apple_ref/doc/uid/10000057i-CH16-SW1&#34; target=&#34;_blank&#34;&gt;Threading Programming Guide&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mobile visual clothing search</title>
      <link>https://r3econ.github.io/publication/clothing-search/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://r3econ.github.io/publication/clothing-search/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
